//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WpfAppForTask5.StudentsService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StudentsServiceSoap", Namespace="http://www.friends.com/")]
    public partial class StudentsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllStudentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsFilteredByAverageMarkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StudentsService() {
            this.Url = global::WpfAppForTask5.Properties.Settings.Default.WpfAppForTask5_StudentsService_StudentsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllStudentsCompletedEventHandler GetAllStudentsCompleted;
        
        /// <remarks/>
        public event GetStudentsFilteredByAverageMarkCompletedEventHandler GetStudentsFilteredByAverageMarkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.friends.com/GetAllStudents", RequestNamespace="http://www.friends.com/", ResponseNamespace="http://www.friends.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Student[] GetAllStudents() {
            object[] results = this.Invoke("GetAllStudents", new object[0]);
            return ((Student[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStudentsAsync() {
            this.GetAllStudentsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllStudentsAsync(object userState) {
            if ((this.GetAllStudentsOperationCompleted == null)) {
                this.GetAllStudentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStudentsOperationCompleted);
            }
            this.InvokeAsync("GetAllStudents", new object[0], this.GetAllStudentsOperationCompleted, userState);
        }
        
        private void OnGetAllStudentsOperationCompleted(object arg) {
            if ((this.GetAllStudentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStudentsCompleted(this, new GetAllStudentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.friends.com/GetStudentsFilteredByAverageMark", RequestNamespace="http://www.friends.com/", ResponseNamespace="http://www.friends.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Student[] GetStudentsFilteredByAverageMark(float lowerBound, float upperBound) {
            object[] results = this.Invoke("GetStudentsFilteredByAverageMark", new object[] {
                        lowerBound,
                        upperBound});
            return ((Student[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsFilteredByAverageMarkAsync(float lowerBound, float upperBound) {
            this.GetStudentsFilteredByAverageMarkAsync(lowerBound, upperBound, null);
        }
        
        /// <remarks/>
        public void GetStudentsFilteredByAverageMarkAsync(float lowerBound, float upperBound, object userState) {
            if ((this.GetStudentsFilteredByAverageMarkOperationCompleted == null)) {
                this.GetStudentsFilteredByAverageMarkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsFilteredByAverageMarkOperationCompleted);
            }
            this.InvokeAsync("GetStudentsFilteredByAverageMark", new object[] {
                        lowerBound,
                        upperBound}, this.GetStudentsFilteredByAverageMarkOperationCompleted, userState);
        }
        
        private void OnGetStudentsFilteredByAverageMarkOperationCompleted(object arg) {
            if ((this.GetStudentsFilteredByAverageMarkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsFilteredByAverageMarkCompleted(this, new GetStudentsFilteredByAverageMarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.friends.com/")]
    public partial class Student {
        
        private string nameField;
        
        private string surnameField;
        
        private float avgMarkField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        public float AvgMark {
            get {
                return this.avgMarkField;
            }
            set {
                this.avgMarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllStudentsCompletedEventHandler(object sender, GetAllStudentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStudentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStudentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Student[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Student[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStudentsFilteredByAverageMarkCompletedEventHandler(object sender, GetStudentsFilteredByAverageMarkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsFilteredByAverageMarkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsFilteredByAverageMarkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Student[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Student[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591