//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentsClient.StudentsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/StudentsService.Models")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AvgMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float AvgMark {
            get {
                return this.AvgMarkField;
            }
            set {
                if ((this.AvgMarkField.Equals(value) != true)) {
                    this.AvgMarkField = value;
                    this.RaisePropertyChanged("AvgMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://friends.com/wcf", ConfigurationName="StudentsService.IStudentsService")]
    public interface IStudentsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://friends.com/wcf/IStudentsService/GetAllStudents", ReplyAction="http://friends.com/wcf/IStudentsService/GetAllStudentsResponse")]
        StudentsClient.StudentsService.Student[] GetAllStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://friends.com/wcf/IStudentsService/GetAllStudents", ReplyAction="http://friends.com/wcf/IStudentsService/GetAllStudentsResponse")]
        System.Threading.Tasks.Task<StudentsClient.StudentsService.Student[]> GetAllStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://friends.com/wcf/IStudentsService/GetStudentsFilteredByAverageMark", ReplyAction="http://friends.com/wcf/IStudentsService/GetStudentsFilteredByAverageMarkResponse")]
        StudentsClient.StudentsService.Student[] GetStudentsFilteredByAverageMark(float lowerBound, float upperBound);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://friends.com/wcf/IStudentsService/GetStudentsFilteredByAverageMark", ReplyAction="http://friends.com/wcf/IStudentsService/GetStudentsFilteredByAverageMarkResponse")]
        System.Threading.Tasks.Task<StudentsClient.StudentsService.Student[]> GetStudentsFilteredByAverageMarkAsync(float lowerBound, float upperBound);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentsServiceChannel : StudentsClient.StudentsService.IStudentsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentsServiceClient : System.ServiceModel.ClientBase<StudentsClient.StudentsService.IStudentsService>, StudentsClient.StudentsService.IStudentsService {
        
        public StudentsServiceClient() {
        }
        
        public StudentsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StudentsClient.StudentsService.Student[] GetAllStudents() {
            return base.Channel.GetAllStudents();
        }
        
        public System.Threading.Tasks.Task<StudentsClient.StudentsService.Student[]> GetAllStudentsAsync() {
            return base.Channel.GetAllStudentsAsync();
        }
        
        public StudentsClient.StudentsService.Student[] GetStudentsFilteredByAverageMark(float lowerBound, float upperBound) {
            return base.Channel.GetStudentsFilteredByAverageMark(lowerBound, upperBound);
        }
        
        public System.Threading.Tasks.Task<StudentsClient.StudentsService.Student[]> GetStudentsFilteredByAverageMarkAsync(float lowerBound, float upperBound) {
            return base.Channel.GetStudentsFilteredByAverageMarkAsync(lowerBound, upperBound);
        }
    }
}
